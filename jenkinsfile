pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'darkknight7/igp_project'
        DOCKER_CREDENTIALS_ID = 'DockerHubLogin' 
        GIT_REPO = 'https://github.com/pablobarua1/IGP_Project' 
        BRANCH_NAME = 'master' 

    }

    stages {
        stage('Checkout') {
            steps {
                 git branch: "${BRANCH_NAME}", url: "${GIT_REPO}"
            }
        }
        stage("Build") {
            steps {
               sh "mvn clean verify"
            }
        }
        stage('Code Compile') {
           steps {
              sh 'mvn compile'
           }
        }
        stage('Unit Test') {
            steps {
               sh 'mvn test'
            }
        }
        stage('Code packaging') {
            steps {
               sh 'mvn package'
            }
        }

        /** stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    docker.build("${DOCKER_HUB_REPO}:${env.BUILD_ID}")
                }
            }
        } **/

        stage('Build Docker Image') {
            steps {
               sh """
               docker build -t ${DOCKER_HUB_REPO}:${env.BUILD_ID} .
               """
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKER_CREDENTIALS_ID}") {
                        // Push the Docker image to the repository
                        docker.image("${DOCKER_HUB_REPO}:${env.BUILD_ID}").push()
                    }
                }
            }
        }

        stage('Deploy Container') {
            steps {
                script {
                    // Run the Docker container
                    sh """
                    docker run -d -p 8090:8090 --name ABCtechnologies-5 ${DOCKER_HUB_REPO}:${env.BUILD_ID}
                    """
                }
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    // Clean up local Docker images
                    docker.image("${DOCKER_HUB_REPO}:${env.BUILD_ID}").remove()
                }
            }
        } 
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    } 
}
